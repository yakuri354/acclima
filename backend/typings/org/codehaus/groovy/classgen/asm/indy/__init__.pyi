
import sys
if sys.version_info >= (3, 8):
    from typing import Protocol
else:
    from typing_extensions import Protocol

import org.codehaus.groovy.ast
import org.codehaus.groovy.ast.expr
import org.codehaus.groovy.classgen.asm
import org.codehaus.groovy.classgen.asm.indy.sc
import typing



class IndyBinHelper(org.codehaus.groovy.classgen.asm.BinaryExpressionHelper):
    def __init__(self, writerController: org.codehaus.groovy.classgen.asm.WriterController): ...

class IndyCallSiteWriter(org.codehaus.groovy.classgen.asm.CallSiteWriter):
    def __init__(self, writerController: org.codehaus.groovy.classgen.asm.WriterController): ...
    def generateCallSiteArray(self) -> None: ...
    def makeCallSite(self, expression: org.codehaus.groovy.ast.expr.Expression, string: str, expression2: org.codehaus.groovy.ast.expr.Expression, boolean: bool, boolean2: bool, boolean3: bool, boolean4: bool) -> None: ...
    def makeCallSiteArrayInitializer(self) -> None: ...
    def makeGetPropertySite(self, expression: org.codehaus.groovy.ast.expr.Expression, string: str, boolean: bool, boolean2: bool) -> None: ...
    def makeGroovyObjectGetPropertySite(self, expression: org.codehaus.groovy.ast.expr.Expression, string: str, boolean: bool, boolean2: bool) -> None: ...
    def makeSingleArgumentCall(self, expression: org.codehaus.groovy.ast.expr.Expression, string: str, expression2: org.codehaus.groovy.ast.expr.Expression) -> None: ...
    def makeSiteEntry(self) -> None: ...
    def prepareCallSite(self, string: str) -> None: ...

class InvokeDynamicWriter(org.codehaus.groovy.classgen.asm.InvocationWriter):
    def __init__(self, writerController: org.codehaus.groovy.classgen.asm.WriterController): ...
    def castNonPrimitiveToBool(self, classNode: org.codehaus.groovy.ast.ClassNode) -> None: ...
    def castToNonPrimitiveIfNecessary(self, classNode: org.codehaus.groovy.ast.ClassNode, classNode2: org.codehaus.groovy.ast.ClassNode) -> None: ...
    def coerce(self, classNode: org.codehaus.groovy.ast.ClassNode, classNode2: org.codehaus.groovy.ast.ClassNode) -> None: ...
    def makeSingleArgumentCall(self, expression: org.codehaus.groovy.ast.expr.Expression, string: str, expression2: org.codehaus.groovy.ast.expr.Expression) -> None: ...


class __module_protocol__(Protocol):
    # A module protocol which reflects the result of ``jp.JPackage("org.codehaus.groovy.classgen.asm.indy")``.

    IndyBinHelper: typing.Type[IndyBinHelper]
    IndyCallSiteWriter: typing.Type[IndyCallSiteWriter]
    InvokeDynamicWriter: typing.Type[InvokeDynamicWriter]
    sc: org.codehaus.groovy.classgen.asm.indy.sc.__module_protocol__

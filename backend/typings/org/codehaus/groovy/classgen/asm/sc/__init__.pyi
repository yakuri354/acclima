
import sys
if sys.version_info >= (3, 8):
    from typing import Protocol
else:
    from typing_extensions import Protocol

import groovyjarjarasm.asm
import org.codehaus.groovy.ast
import org.codehaus.groovy.ast.expr
import org.codehaus.groovy.ast.stmt
import org.codehaus.groovy.classgen
import org.codehaus.groovy.classgen.asm
import typing



class StaticCompilationMopWriter(org.codehaus.groovy.classgen.asm.MopWriter):
    FACTORY: typing.ClassVar[org.codehaus.groovy.classgen.asm.MopWriter.Factory] = ...
    def __init__(self, writerController: org.codehaus.groovy.classgen.asm.WriterController): ...
    def createMopMethods(self) -> None: ...

class StaticInvocationWriter(org.codehaus.groovy.classgen.asm.InvocationWriter):
    def __init__(self, writerController: org.codehaus.groovy.classgen.asm.WriterController): ...
    def getCurrentCall(self) -> org.codehaus.groovy.ast.expr.MethodCallExpression: ...
    def makeCall(self, expression: org.codehaus.groovy.ast.expr.Expression, expression2: org.codehaus.groovy.ast.expr.Expression, expression3: org.codehaus.groovy.ast.expr.Expression, expression4: org.codehaus.groovy.ast.expr.Expression, methodCallerMultiAdapter: org.codehaus.groovy.classgen.asm.MethodCallerMultiAdapter, boolean: bool, boolean2: bool, boolean3: bool) -> None: ...
    def writeInvokeConstructor(self, constructorCallExpression: org.codehaus.groovy.ast.expr.ConstructorCallExpression) -> None: ...
    def writeInvokeMethod(self, methodCallExpression: org.codehaus.groovy.ast.expr.MethodCallExpression) -> None: ...
    def writeSpecialConstructorCall(self, constructorCallExpression: org.codehaus.groovy.ast.expr.ConstructorCallExpression) -> None: ...

class StaticPropertyAccessHelper:
    def __init__(self): ...
    @staticmethod
    def transformToSetterCall(expression: org.codehaus.groovy.ast.expr.Expression, methodNode: org.codehaus.groovy.ast.MethodNode, expression2: org.codehaus.groovy.ast.expr.Expression, boolean: bool, boolean2: bool, boolean3: bool, boolean4: bool, expression3: org.codehaus.groovy.ast.expr.Expression) -> org.codehaus.groovy.ast.expr.Expression: ...

class StaticTypesBinaryExpressionMultiTypeDispatcher(org.codehaus.groovy.classgen.asm.BinaryExpressionMultiTypeDispatcher, groovyjarjarasm.asm.Opcodes):
    def __init__(self, writerController: org.codehaus.groovy.classgen.asm.WriterController): ...
    def evaluateEqual(self, binaryExpression: org.codehaus.groovy.ast.expr.BinaryExpression, boolean: bool) -> None: ...

class StaticTypesCallSiteWriter(org.codehaus.groovy.classgen.asm.CallSiteWriter, groovyjarjarasm.asm.Opcodes):
    def __init__(self, staticTypesWriterController: 'StaticTypesWriterController'): ...
    def fallbackAttributeOrPropertySite(self, propertyExpression: org.codehaus.groovy.ast.expr.PropertyExpression, expression: org.codehaus.groovy.ast.expr.Expression, string: str, methodCallerMultiAdapter: org.codehaus.groovy.classgen.asm.MethodCallerMultiAdapter) -> None: ...
    def generateCallSiteArray(self) -> None: ...
    def makeCallSite(self, expression: org.codehaus.groovy.ast.expr.Expression, string: str, expression2: org.codehaus.groovy.ast.expr.Expression, boolean: bool, boolean2: bool, boolean3: bool, boolean4: bool) -> None: ...
    def makeCallSiteArrayInitializer(self) -> None: ...
    def makeGetPropertySite(self, expression: org.codehaus.groovy.ast.expr.Expression, string: str, boolean: bool, boolean2: bool) -> None: ...
    def makeGroovyObjectGetPropertySite(self, expression: org.codehaus.groovy.ast.expr.Expression, string: str, boolean: bool, boolean2: bool) -> None: ...
    def makeSingleArgumentCall(self, expression: org.codehaus.groovy.ast.expr.Expression, string: str, expression2: org.codehaus.groovy.ast.expr.Expression) -> None: ...
    def makeSiteEntry(self) -> None: ...
    def prepareCallSite(self, string: str) -> None: ...

class StaticTypesClosureWriter(org.codehaus.groovy.classgen.asm.ClosureWriter):
    def __init__(self, writerController: org.codehaus.groovy.classgen.asm.WriterController): ...

class StaticTypesStatementWriter(org.codehaus.groovy.classgen.asm.StatementWriter):
    def __init__(self, staticTypesWriterController: 'StaticTypesWriterController'): ...
    def writeBlockStatement(self, blockStatement: org.codehaus.groovy.ast.stmt.BlockStatement) -> None: ...

class StaticTypesTypeChooser(org.codehaus.groovy.classgen.asm.StatementMetaTypeChooser):
    def __init__(self): ...
    def resolveType(self, expression: org.codehaus.groovy.ast.expr.Expression, classNode: org.codehaus.groovy.ast.ClassNode) -> org.codehaus.groovy.ast.ClassNode: ...

class StaticTypesUnaryExpressionHelper(org.codehaus.groovy.classgen.asm.UnaryExpressionHelper, groovyjarjarasm.asm.Opcodes):
    def __init__(self, writerController: org.codehaus.groovy.classgen.asm.WriterController): ...
    def writeBitwiseNegate(self, bitwiseNegationExpression: org.codehaus.groovy.ast.expr.BitwiseNegationExpression) -> None: ...
    def writeNotExpression(self, notExpression: org.codehaus.groovy.ast.expr.NotExpression) -> None: ...
    def writeUnaryMinus(self, unaryMinusExpression: org.codehaus.groovy.ast.expr.UnaryMinusExpression) -> None: ...
    def writeUnaryPlus(self, unaryPlusExpression: org.codehaus.groovy.ast.expr.UnaryPlusExpression) -> None: ...

class StaticTypesWriterController(org.codehaus.groovy.classgen.asm.DelegatingController):
    def __init__(self, writerController: org.codehaus.groovy.classgen.asm.WriterController): ...
    def getBinaryExpressionHelper(self) -> org.codehaus.groovy.classgen.asm.BinaryExpressionHelper: ...
    def getCallSiteWriter(self) -> org.codehaus.groovy.classgen.asm.CallSiteWriter: ...
    def getClosureWriter(self) -> org.codehaus.groovy.classgen.asm.ClosureWriter: ...
    def getInvocationWriter(self) -> org.codehaus.groovy.classgen.asm.InvocationWriter: ...
    def getRegularCallSiteWriter(self) -> org.codehaus.groovy.classgen.asm.CallSiteWriter: ...
    def getRegularInvocationWriter(self) -> org.codehaus.groovy.classgen.asm.InvocationWriter: ...
    def getStatementWriter(self) -> org.codehaus.groovy.classgen.asm.StatementWriter: ...
    def getTypeChooser(self) -> org.codehaus.groovy.classgen.asm.TypeChooser: ...
    def getUnaryExpressionHelper(self) -> org.codehaus.groovy.classgen.asm.UnaryExpressionHelper: ...
    def init(self, asmClassGenerator: org.codehaus.groovy.classgen.AsmClassGenerator, generatorContext: org.codehaus.groovy.classgen.GeneratorContext, classVisitor: groovyjarjarasm.asm.ClassVisitor, classNode: org.codehaus.groovy.ast.ClassNode) -> None: ...
    def isFastPath(self) -> bool: ...
    def setConstructorNode(self, constructorNode: org.codehaus.groovy.ast.ConstructorNode) -> None: ...
    def setMethodNode(self, methodNode: org.codehaus.groovy.ast.MethodNode) -> None: ...

class StaticTypesWriterControllerFactoryImpl(org.codehaus.groovy.classgen.asm.WriterControllerFactory):
    def __init__(self): ...
    def makeController(self, writerController: org.codehaus.groovy.classgen.asm.WriterController) -> org.codehaus.groovy.classgen.asm.WriterController: ...


class __module_protocol__(Protocol):
    # A module protocol which reflects the result of ``jp.JPackage("org.codehaus.groovy.classgen.asm.sc")``.

    StaticCompilationMopWriter: typing.Type[StaticCompilationMopWriter]
    StaticInvocationWriter: typing.Type[StaticInvocationWriter]
    StaticPropertyAccessHelper: typing.Type[StaticPropertyAccessHelper]
    StaticTypesBinaryExpressionMultiTypeDispatcher: typing.Type[StaticTypesBinaryExpressionMultiTypeDispatcher]
    StaticTypesCallSiteWriter: typing.Type[StaticTypesCallSiteWriter]
    StaticTypesClosureWriter: typing.Type[StaticTypesClosureWriter]
    StaticTypesStatementWriter: typing.Type[StaticTypesStatementWriter]
    StaticTypesTypeChooser: typing.Type[StaticTypesTypeChooser]
    StaticTypesUnaryExpressionHelper: typing.Type[StaticTypesUnaryExpressionHelper]
    StaticTypesWriterController: typing.Type[StaticTypesWriterController]
    StaticTypesWriterControllerFactoryImpl: typing.Type[StaticTypesWriterControllerFactoryImpl]

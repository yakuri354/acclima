
import sys
if sys.version_info >= (3, 8):
    from typing import Protocol
else:
    from typing_extensions import Protocol

import groovy.lang
import java.lang
import java.lang.reflect
import jpype
import org.codehaus.groovy.ast
import org.codehaus.groovy.runtime
import org.codehaus.groovy.vmplugin
import typing



class JUnit4Utils:
    def __init__(self): ...

class Java5(org.codehaus.groovy.vmplugin.VMPlugin):
    def __init__(self): ...
    def configureAnnotation(self, annotationNode: org.codehaus.groovy.ast.AnnotationNode) -> None: ...
    def configureAnnotationFromDefinition(self, annotationNode: org.codehaus.groovy.ast.AnnotationNode, annotationNode2: org.codehaus.groovy.ast.AnnotationNode) -> None: ...
    def configureAnnotationNodeFromDefinition(self, annotationNode: org.codehaus.groovy.ast.AnnotationNode, annotationNode2: org.codehaus.groovy.ast.AnnotationNode) -> None: ...
    def configureClassNode(self, compileUnit: org.codehaus.groovy.ast.CompileUnit, classNode: org.codehaus.groovy.ast.ClassNode) -> None: ...
    @staticmethod
    def configureTypeVariableDefinition(classNode: org.codehaus.groovy.ast.ClassNode, classNodeArray: typing.Union[typing.List[org.codehaus.groovy.ast.ClassNode], jpype.JArray]) -> org.codehaus.groovy.ast.GenericsType: ...
    @staticmethod
    def configureTypeVariableReference(string: str) -> org.codehaus.groovy.ast.ClassNode: ...
    def getInvokeSpecialHandle(self, method: java.lang.reflect.Method, object: typing.Any) -> typing.Any: ...
    def getPluginDefaultGroovyMethods(self) -> typing.MutableSequence[typing.Type]: ...
    def getPluginStaticGroovyMethods(self) -> typing.MutableSequence[typing.Type]: ...
    def getVersion(self) -> int: ...
    def invalidateCallSites(self) -> None: ...
    def invokeHandle(self, object: typing.Any, objectArray: typing.Union[typing.List[typing.Any], jpype.JArray]) -> typing.Any: ...
    def setAdditionalClassInformation(self, classNode: org.codehaus.groovy.ast.ClassNode) -> None: ...

class PluginDefaultGroovyMethods(org.codehaus.groovy.runtime.DefaultGroovyMethodsSupport):
    def __init__(self): ...
    @staticmethod
    def leftShift(stringBuilder: java.lang.StringBuilder, object: typing.Any) -> java.lang.StringBuilder: ...
    @staticmethod
    def next(enum: java.lang.Enum) -> typing.Any: ...
    @staticmethod
    def plus(stringBuilder: java.lang.StringBuilder, string2: str) -> str: ...
    @staticmethod
    def previous(enum: java.lang.Enum) -> typing.Any: ...
    @typing.overload
    @staticmethod
    def putAt(stringBuilder: java.lang.StringBuilder, emptyRange: groovy.lang.EmptyRange, object: typing.Any) -> None: ...
    @typing.overload
    @staticmethod
    def putAt(stringBuilder: java.lang.StringBuilder, intRange: groovy.lang.IntRange, object: typing.Any) -> None: ...
    @staticmethod
    def size(stringBuilder: java.lang.StringBuilder) -> int: ...


class __module_protocol__(Protocol):
    # A module protocol which reflects the result of ``jp.JPackage("org.codehaus.groovy.vmplugin.v5")``.

    JUnit4Utils: typing.Type[JUnit4Utils]
    Java5: typing.Type[Java5]
    PluginDefaultGroovyMethods: typing.Type[PluginDefaultGroovyMethods]

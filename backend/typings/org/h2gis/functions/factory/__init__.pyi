
import sys
if sys.version_info >= (3, 8):
    from typing import Protocol
else:
    from typing_extensions import Protocol

import java.sql
import java.util
import javax.sql
import org.h2gis.api
import typing



class H2GISDBFactory:
    H2_PARAMETERS: typing.ClassVar[str] = ...
    JDBC_URL: typing.ClassVar[str] = ...
    JDBC_USER: typing.ClassVar[str] = ...
    JDBC_PASSWORD: typing.ClassVar[str] = ...
    START_URL: typing.ClassVar[str] = ...
    JDBC_DATABASE_NAME: typing.ClassVar[str] = ...
    JDBC_NETWORK_PROTOCOL: typing.ClassVar[str] = ...
    JDBC_PORT_NUMBER: typing.ClassVar[str] = ...
    JDBC_SERVER_NAME: typing.ClassVar[str] = ...
    DEFAULT_USER: typing.ClassVar[str] = ...
    DEFAULT_PASSWORD: typing.ClassVar[str] = ...
    @typing.overload
    @staticmethod
    def createDataSource(string: str, boolean: bool) -> javax.sql.DataSource: ...
    @typing.overload
    @staticmethod
    def createDataSource(string: str, boolean: bool, string2: str) -> javax.sql.DataSource: ...
    @typing.overload
    @staticmethod
    def createDataSource(properties: java.util.Properties) -> javax.sql.DataSource: ...
    @typing.overload
    @staticmethod
    def createDataSource(properties: java.util.Properties, boolean: bool) -> javax.sql.DataSource: ...
    @typing.overload
    @staticmethod
    def createSpatialDataBase(string: str) -> java.sql.Connection: ...
    @typing.overload
    @staticmethod
    def createSpatialDataBase(string: str, boolean: bool) -> java.sql.Connection: ...
    @typing.overload
    @staticmethod
    def createSpatialDataBase(string: str, boolean: bool, string2: str) -> java.sql.Connection: ...
    @staticmethod
    def openSpatialDataBase(string: str) -> java.sql.Connection: ...

class H2GISFunctions:
    GEOMETRY_BASE_TYPE: typing.ClassVar[str] = ...
    def __init__(self): ...
    @staticmethod
    def getAlias(function: org.h2gis.api.Function) -> str: ...
    @staticmethod
    def getBuiltInsFunctions() -> typing.MutableSequence[org.h2gis.api.Function]: ...
    @typing.overload
    @staticmethod
    def load(connection: java.sql.Connection) -> None: ...
    @typing.overload
    @staticmethod
    def load(connection: java.sql.Connection, string: str, string2: str) -> None: ...
    @typing.overload
    @staticmethod
    def registerFunction(statement: java.sql.Statement, function: org.h2gis.api.Function, string: str) -> None: ...
    @typing.overload
    @staticmethod
    def registerFunction(statement: java.sql.Statement, function: org.h2gis.api.Function, string: str, boolean: bool) -> None: ...
    @staticmethod
    def registerSpatialTables(connection: java.sql.Connection) -> None: ...
    @staticmethod
    def unRegisterFunction(statement: java.sql.Statement, function: org.h2gis.api.Function) -> None: ...
    @staticmethod
    def unRegisterH2GISFunctions(connection: java.sql.Connection) -> None: ...


class __module_protocol__(Protocol):
    # A module protocol which reflects the result of ``jp.JPackage("org.h2gis.functions.factory")``.

    H2GISDBFactory: typing.Type[H2GISDBFactory]
    H2GISFunctions: typing.Type[H2GISFunctions]

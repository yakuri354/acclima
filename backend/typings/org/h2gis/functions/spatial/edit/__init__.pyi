
import sys
if sys.version_info >= (3, 8):
    from typing import Protocol
else:
    from typing_extensions import Protocol

import org.h2gis.api
import org.locationtech.jts.geom
import org.locationtech.jts.operation.distance
import typing



class EditUtilities:
    def __init__(self): ...
    @staticmethod
    def getVertexToSnap(geometry: org.locationtech.jts.geom.Geometry, point: org.locationtech.jts.geom.Point, double: float) -> org.locationtech.jts.operation.distance.GeometryLocation: ...

class ST_AddPoint(org.h2gis.api.DeterministicScalarFunction):
    PRECISION: typing.ClassVar[float] = ...
    def __init__(self): ...
    @staticmethod
    def addCoordinate(coordinateSequence: org.locationtech.jts.geom.CoordinateSequence, coordinate2: org.locationtech.jts.geom.Coordinate, int: int) -> typing.MutableSequence[org.locationtech.jts.geom.Coordinate]: ...
    @typing.overload
    @staticmethod
    def addPoint(geometry: org.locationtech.jts.geom.Geometry, point: org.locationtech.jts.geom.Point) -> org.locationtech.jts.geom.Geometry: ...
    @typing.overload
    @staticmethod
    def addPoint(geometry: org.locationtech.jts.geom.Geometry, point: org.locationtech.jts.geom.Point, int: int) -> org.locationtech.jts.geom.Geometry: ...
    def getJavaStaticMethod(self) -> str: ...

class ST_AddZ(org.h2gis.api.DeterministicScalarFunction):
    def __init__(self): ...
    @staticmethod
    def addZ(geometry: org.locationtech.jts.geom.Geometry, double: float) -> org.locationtech.jts.geom.Geometry: ...
    def getJavaStaticMethod(self) -> str: ...
    class AddZCoordinateSequenceFilter(org.locationtech.jts.geom.CoordinateSequenceFilter):
        def __init__(self, double: float): ...
        def filter(self, coordinateSequence: org.locationtech.jts.geom.CoordinateSequence, int: int) -> None: ...
        def isDone(self) -> bool: ...
        def isGeometryChanged(self) -> bool: ...

class ST_CollectionExtract(org.h2gis.api.DeterministicScalarFunction):
    def __init__(self): ...
    @staticmethod
    def collectionExtract(geometry: org.locationtech.jts.geom.Geometry, int: int) -> org.locationtech.jts.geom.Geometry: ...
    def getJavaStaticMethod(self) -> str: ...

class ST_Densify(org.h2gis.api.DeterministicScalarFunction):
    def __init__(self): ...
    @staticmethod
    def densify(geometry: org.locationtech.jts.geom.Geometry, double: float) -> org.locationtech.jts.geom.Geometry: ...
    def getJavaStaticMethod(self) -> str: ...

class ST_FlipCoordinates(org.h2gis.api.DeterministicScalarFunction):
    def __init__(self): ...
    @staticmethod
    def flipCoordinates(geometry: org.locationtech.jts.geom.Geometry) -> org.locationtech.jts.geom.Geometry: ...
    def getJavaStaticMethod(self) -> str: ...
    class FlipCoordinateSequenceFilter(org.locationtech.jts.geom.CoordinateSequenceFilter):
        def __init__(self): ...
        def filter(self, coordinateSequence: org.locationtech.jts.geom.CoordinateSequence, int: int) -> None: ...
        def isDone(self) -> bool: ...
        def isGeometryChanged(self) -> bool: ...

class ST_InsertPoint(org.h2gis.api.DeterministicScalarFunction):
    PRECISION: typing.ClassVar[float] = ...
    def __init__(self): ...
    def getJavaStaticMethod(self) -> str: ...
    @typing.overload
    @staticmethod
    def insertPoint(geometry: org.locationtech.jts.geom.Geometry, point: org.locationtech.jts.geom.Point) -> org.locationtech.jts.geom.Geometry: ...
    @typing.overload
    @staticmethod
    def insertPoint(geometry: org.locationtech.jts.geom.Geometry, point: org.locationtech.jts.geom.Point, double: float) -> org.locationtech.jts.geom.Geometry: ...

class ST_Interpolate3DLine(org.h2gis.api.DeterministicScalarFunction):
    def __init__(self): ...
    def getJavaStaticMethod(self) -> str: ...
    @staticmethod
    def interpolateLine(geometry: org.locationtech.jts.geom.Geometry) -> org.locationtech.jts.geom.Geometry: ...

class ST_MultiplyZ(org.h2gis.api.DeterministicScalarFunction):
    def __init__(self): ...
    def getJavaStaticMethod(self) -> str: ...
    @staticmethod
    def multiplyZ(geometry: org.locationtech.jts.geom.Geometry, double: float) -> org.locationtech.jts.geom.Geometry: ...
    class MultiplyZCoordinateSequenceFilter(org.locationtech.jts.geom.CoordinateSequenceFilter):
        def __init__(self, double: float): ...
        def filter(self, coordinateSequence: org.locationtech.jts.geom.CoordinateSequence, int: int) -> None: ...
        def isDone(self) -> bool: ...
        def isGeometryChanged(self) -> bool: ...

class ST_Normalize(org.h2gis.api.DeterministicScalarFunction):
    def __init__(self): ...
    def getJavaStaticMethod(self) -> str: ...
    @staticmethod
    def normalize(geometry: org.locationtech.jts.geom.Geometry) -> org.locationtech.jts.geom.Geometry: ...

class ST_RemoveDuplicatedCoordinates(org.h2gis.api.DeterministicScalarFunction):
    def __init__(self): ...
    def getJavaStaticMethod(self) -> str: ...
    @typing.overload
    @staticmethod
    def removeCoordinates(geometry: org.locationtech.jts.geom.Geometry) -> org.locationtech.jts.geom.Geometry: ...
    @typing.overload
    @staticmethod
    def removeCoordinates(geometryCollection: org.locationtech.jts.geom.GeometryCollection) -> org.locationtech.jts.geom.GeometryCollection: ...
    @typing.overload
    @staticmethod
    def removeCoordinates(lineString: org.locationtech.jts.geom.LineString) -> org.locationtech.jts.geom.LineString: ...
    @typing.overload
    @staticmethod
    def removeCoordinates(linearRing: org.locationtech.jts.geom.LinearRing) -> org.locationtech.jts.geom.LinearRing: ...
    @typing.overload
    @staticmethod
    def removeCoordinates(multiLineString: org.locationtech.jts.geom.MultiLineString) -> org.locationtech.jts.geom.MultiLineString: ...
    @typing.overload
    @staticmethod
    def removeCoordinates(multiPoint: org.locationtech.jts.geom.MultiPoint) -> org.locationtech.jts.geom.MultiPoint: ...
    @typing.overload
    @staticmethod
    def removeCoordinates(multiPolygon: org.locationtech.jts.geom.MultiPolygon) -> org.locationtech.jts.geom.MultiPolygon: ...
    @typing.overload
    @staticmethod
    def removeCoordinates(polygon: org.locationtech.jts.geom.Polygon) -> org.locationtech.jts.geom.Polygon: ...
    @staticmethod
    def removeDuplicatedCoordinates(geometry: org.locationtech.jts.geom.Geometry) -> org.locationtech.jts.geom.Geometry: ...

class ST_RemoveHoles(org.h2gis.api.DeterministicScalarFunction):
    def __init__(self): ...
    def getJavaStaticMethod(self) -> str: ...
    @staticmethod
    def removeHoles(geometry: org.locationtech.jts.geom.Geometry) -> org.locationtech.jts.geom.Geometry: ...
    @staticmethod
    def removeHolesMultiPolygon(multiPolygon: org.locationtech.jts.geom.MultiPolygon) -> org.locationtech.jts.geom.MultiPolygon: ...
    @staticmethod
    def removeHolesPolygon(polygon: org.locationtech.jts.geom.Polygon) -> org.locationtech.jts.geom.Polygon: ...

class ST_RemovePoints(org.h2gis.api.DeterministicScalarFunction):
    def __init__(self): ...
    def getJavaStaticMethod(self) -> str: ...
    @staticmethod
    def removePoint(geometry: org.locationtech.jts.geom.Geometry, polygon: org.locationtech.jts.geom.Polygon) -> org.locationtech.jts.geom.Geometry: ...

class ST_RemoveRepeatedPoints(org.h2gis.api.DeterministicScalarFunction):
    def __init__(self): ...
    def getJavaStaticMethod(self) -> str: ...
    @typing.overload
    @staticmethod
    def removeDuplicateCoordinates(geometry: org.locationtech.jts.geom.Geometry, double: float) -> org.locationtech.jts.geom.Geometry: ...
    @typing.overload
    @staticmethod
    def removeDuplicateCoordinates(geometryCollection: org.locationtech.jts.geom.GeometryCollection, double: float) -> org.locationtech.jts.geom.GeometryCollection: ...
    @typing.overload
    @staticmethod
    def removeDuplicateCoordinates(lineString: org.locationtech.jts.geom.LineString, double: float) -> org.locationtech.jts.geom.LineString: ...
    @typing.overload
    @staticmethod
    def removeDuplicateCoordinates(linearRing: org.locationtech.jts.geom.LinearRing, double: float) -> org.locationtech.jts.geom.LinearRing: ...
    @typing.overload
    @staticmethod
    def removeDuplicateCoordinates(multiLineString: org.locationtech.jts.geom.MultiLineString, double: float) -> org.locationtech.jts.geom.MultiLineString: ...
    @typing.overload
    @staticmethod
    def removeDuplicateCoordinates(multiPolygon: org.locationtech.jts.geom.MultiPolygon, double: float) -> org.locationtech.jts.geom.MultiPolygon: ...
    @typing.overload
    @staticmethod
    def removeDuplicateCoordinates(polygon: org.locationtech.jts.geom.Polygon, double: float) -> org.locationtech.jts.geom.Polygon: ...
    @typing.overload
    @staticmethod
    def removeRepeatedPoints(geometry: org.locationtech.jts.geom.Geometry) -> org.locationtech.jts.geom.Geometry: ...
    @typing.overload
    @staticmethod
    def removeRepeatedPoints(geometry: org.locationtech.jts.geom.Geometry, double: float) -> org.locationtech.jts.geom.Geometry: ...

class ST_Reverse(org.h2gis.api.DeterministicScalarFunction):
    def __init__(self): ...
    def getJavaStaticMethod(self) -> str: ...
    @staticmethod
    def reverse(geometry: org.locationtech.jts.geom.Geometry) -> org.locationtech.jts.geom.Geometry: ...
    @staticmethod
    def reverseMultiPoint(multiPoint: org.locationtech.jts.geom.MultiPoint) -> org.locationtech.jts.geom.Geometry: ...

class ST_Reverse3DLine(org.h2gis.api.DeterministicScalarFunction):
    def __init__(self): ...
    def getJavaStaticMethod(self) -> str: ...
    @staticmethod
    def reverse3D(multiLineString: org.locationtech.jts.geom.MultiLineString, string: str) -> org.locationtech.jts.geom.MultiLineString: ...
    @typing.overload
    @staticmethod
    def reverse3DLine(geometry: org.locationtech.jts.geom.Geometry) -> org.locationtech.jts.geom.Geometry: ...
    @typing.overload
    @staticmethod
    def reverse3DLine(geometry: org.locationtech.jts.geom.Geometry, string: str) -> org.locationtech.jts.geom.Geometry: ...

class ST_UpdateZ(org.h2gis.api.DeterministicScalarFunction):
    def __init__(self): ...
    @typing.overload
    @staticmethod
    def convert(geometryCollection: org.locationtech.jts.geom.GeometryCollection, double: float) -> org.locationtech.jts.geom.GeometryCollection: ...
    @typing.overload
    @staticmethod
    def convert(lineString: org.locationtech.jts.geom.LineString, double: float) -> org.locationtech.jts.geom.LineString: ...
    @typing.overload
    @staticmethod
    def convert(linearRing: org.locationtech.jts.geom.LinearRing, double: float) -> org.locationtech.jts.geom.LinearRing: ...
    @typing.overload
    @staticmethod
    def convert(multiLineString: org.locationtech.jts.geom.MultiLineString, double: float) -> org.locationtech.jts.geom.MultiLineString: ...
    @typing.overload
    @staticmethod
    def convert(multiPoint: org.locationtech.jts.geom.MultiPoint, double: float) -> org.locationtech.jts.geom.MultiPoint: ...
    @typing.overload
    @staticmethod
    def convert(multiPolygon: org.locationtech.jts.geom.MultiPolygon, double: float) -> org.locationtech.jts.geom.MultiPolygon: ...
    @typing.overload
    @staticmethod
    def convert(polygon: org.locationtech.jts.geom.Polygon, double: float) -> org.locationtech.jts.geom.Polygon: ...
    @staticmethod
    def force(geometry: org.locationtech.jts.geom.Geometry, double: float) -> org.locationtech.jts.geom.Geometry: ...
    def getJavaStaticMethod(self) -> str: ...
    @staticmethod
    def updateZ(geometry: org.locationtech.jts.geom.Geometry, double: float) -> org.locationtech.jts.geom.Geometry: ...

class ST_ZUpdateLineExtremities(org.h2gis.api.DeterministicScalarFunction):
    def __init__(self): ...
    def getJavaStaticMethod(self) -> str: ...
    @typing.overload
    @staticmethod
    def updateZExtremities(geometry: org.locationtech.jts.geom.Geometry, double: float, double2: float) -> org.locationtech.jts.geom.Geometry: ...
    @typing.overload
    @staticmethod
    def updateZExtremities(geometry: org.locationtech.jts.geom.Geometry, double: float, double2: float, boolean: bool) -> org.locationtech.jts.geom.Geometry: ...


class __module_protocol__(Protocol):
    # A module protocol which reflects the result of ``jp.JPackage("org.h2gis.functions.spatial.edit")``.

    EditUtilities: typing.Type[EditUtilities]
    ST_AddPoint: typing.Type[ST_AddPoint]
    ST_AddZ: typing.Type[ST_AddZ]
    ST_CollectionExtract: typing.Type[ST_CollectionExtract]
    ST_Densify: typing.Type[ST_Densify]
    ST_FlipCoordinates: typing.Type[ST_FlipCoordinates]
    ST_InsertPoint: typing.Type[ST_InsertPoint]
    ST_Interpolate3DLine: typing.Type[ST_Interpolate3DLine]
    ST_MultiplyZ: typing.Type[ST_MultiplyZ]
    ST_Normalize: typing.Type[ST_Normalize]
    ST_RemoveDuplicatedCoordinates: typing.Type[ST_RemoveDuplicatedCoordinates]
    ST_RemoveHoles: typing.Type[ST_RemoveHoles]
    ST_RemovePoints: typing.Type[ST_RemovePoints]
    ST_RemoveRepeatedPoints: typing.Type[ST_RemoveRepeatedPoints]
    ST_Reverse: typing.Type[ST_Reverse]
    ST_Reverse3DLine: typing.Type[ST_Reverse3DLine]
    ST_UpdateZ: typing.Type[ST_UpdateZ]
    ST_ZUpdateLineExtremities: typing.Type[ST_ZUpdateLineExtremities]


import sys
if sys.version_info >= (3, 8):
    from typing import Protocol
else:
    from typing_extensions import Protocol

import org.h2.value
import org.h2gis.api
import org.locationtech.jts.geom
import typing



class ST_Contains(org.h2gis.api.DeterministicScalarFunction):
    def __init__(self): ...
    def getJavaStaticMethod(self) -> str: ...
    @staticmethod
    def isContains(geometry: org.locationtech.jts.geom.Geometry, geometry2: org.locationtech.jts.geom.Geometry) -> bool: ...

class ST_Covers(org.h2gis.api.DeterministicScalarFunction):
    def __init__(self): ...
    @staticmethod
    def covers(geometry: org.locationtech.jts.geom.Geometry, geometry2: org.locationtech.jts.geom.Geometry) -> bool: ...
    def getJavaStaticMethod(self) -> str: ...

class ST_Crosses(org.h2gis.api.DeterministicScalarFunction):
    def __init__(self): ...
    @staticmethod
    def geomCrosses(geometry: org.locationtech.jts.geom.Geometry, geometry2: org.locationtech.jts.geom.Geometry) -> bool: ...
    def getJavaStaticMethod(self) -> str: ...

class ST_DWithin(org.h2gis.api.DeterministicScalarFunction):
    def __init__(self): ...
    def getJavaStaticMethod(self) -> str: ...
    @staticmethod
    def isWithinDistance(geometry: org.locationtech.jts.geom.Geometry, geometry2: org.locationtech.jts.geom.Geometry, double: float) -> bool: ...

class ST_Disjoint(org.h2gis.api.DeterministicScalarFunction):
    def __init__(self): ...
    @staticmethod
    def geomDisjoint(geometry: org.locationtech.jts.geom.Geometry, geometry2: org.locationtech.jts.geom.Geometry) -> bool: ...
    def getJavaStaticMethod(self) -> str: ...

class ST_EnvelopesIntersect(org.h2gis.api.DeterministicScalarFunction):
    def __init__(self): ...
    def getJavaStaticMethod(self) -> str: ...
    @staticmethod
    def intersects(geometry: org.locationtech.jts.geom.Geometry, geometry2: org.locationtech.jts.geom.Geometry) -> bool: ...

class ST_Equals(org.h2gis.api.DeterministicScalarFunction):
    def __init__(self): ...
    @staticmethod
    def geomEquals(geometry: org.locationtech.jts.geom.Geometry, geometry2: org.locationtech.jts.geom.Geometry) -> bool: ...
    def getJavaStaticMethod(self) -> str: ...

class ST_Intersects(org.h2gis.api.DeterministicScalarFunction):
    def __init__(self): ...
    def getJavaStaticMethod(self) -> str: ...
    @staticmethod
    def isIntersects(geometry: org.locationtech.jts.geom.Geometry, geometry2: org.locationtech.jts.geom.Geometry) -> bool: ...

class ST_OrderingEquals(org.h2gis.api.DeterministicScalarFunction):
    def __init__(self): ...
    def getJavaStaticMethod(self) -> str: ...
    @staticmethod
    def orderingEquals(value: org.h2.value.Value, value2: org.h2.value.Value) -> bool: ...

class ST_Overlaps(org.h2gis.api.DeterministicScalarFunction):
    def __init__(self): ...
    def getJavaStaticMethod(self) -> str: ...
    @staticmethod
    def isOverlaps(geometry: org.locationtech.jts.geom.Geometry, geometry2: org.locationtech.jts.geom.Geometry) -> bool: ...

class ST_Relate(org.h2gis.api.DeterministicScalarFunction):
    def __init__(self): ...
    def getJavaStaticMethod(self) -> str: ...
    @typing.overload
    @staticmethod
    def relate(geometry: org.locationtech.jts.geom.Geometry, geometry2: org.locationtech.jts.geom.Geometry, string: str) -> bool: ...
    @typing.overload
    @staticmethod
    def relate(geometry: org.locationtech.jts.geom.Geometry, geometry2: org.locationtech.jts.geom.Geometry) -> str: ...

class ST_Touches(org.h2gis.api.DeterministicScalarFunction):
    def __init__(self): ...
    @staticmethod
    def geomTouches(geometry: org.locationtech.jts.geom.Geometry, geometry2: org.locationtech.jts.geom.Geometry) -> bool: ...
    def getJavaStaticMethod(self) -> str: ...

class ST_Within(org.h2gis.api.DeterministicScalarFunction):
    def __init__(self): ...
    def getJavaStaticMethod(self) -> str: ...
    @staticmethod
    def isWithin(geometry: org.locationtech.jts.geom.Geometry, geometry2: org.locationtech.jts.geom.Geometry) -> bool: ...


class __module_protocol__(Protocol):
    # A module protocol which reflects the result of ``jp.JPackage("org.h2gis.functions.spatial.predicates")``.

    ST_Contains: typing.Type[ST_Contains]
    ST_Covers: typing.Type[ST_Covers]
    ST_Crosses: typing.Type[ST_Crosses]
    ST_DWithin: typing.Type[ST_DWithin]
    ST_Disjoint: typing.Type[ST_Disjoint]
    ST_EnvelopesIntersect: typing.Type[ST_EnvelopesIntersect]
    ST_Equals: typing.Type[ST_Equals]
    ST_Intersects: typing.Type[ST_Intersects]
    ST_OrderingEquals: typing.Type[ST_OrderingEquals]
    ST_Overlaps: typing.Type[ST_Overlaps]
    ST_Relate: typing.Type[ST_Relate]
    ST_Touches: typing.Type[ST_Touches]
    ST_Within: typing.Type[ST_Within]


import sys
if sys.version_info >= (3, 8):
    from typing import Protocol
else:
    from typing_extensions import Protocol

import java.util
import org.h2gis.api
import org.locationtech.jts.geom
import typing



class MaxDistanceOp:
    def __init__(self, geometry: org.locationtech.jts.geom.Geometry, geometry2: org.locationtech.jts.geom.Geometry): ...
    def getCoordinatesDistance(self) -> typing.MutableSequence[org.locationtech.jts.geom.Coordinate]: ...
    def getDistance(self) -> float: ...
    class MaxDistanceFilter(org.locationtech.jts.geom.CoordinateFilter):
        def __init__(self, maxDistanceOp: 'MaxDistanceOp', hashSet: java.util.HashSet): ...
        def filter(self, coordinate: org.locationtech.jts.geom.Coordinate) -> None: ...
        def getCoordinatesDistance(self) -> typing.MutableSequence[org.locationtech.jts.geom.Coordinate]: ...
        def getDistance(self) -> float: ...

class ST_ClosestCoordinate(org.h2gis.api.DeterministicScalarFunction):
    def __init__(self): ...
    @staticmethod
    def getFurthestCoordinate(point: org.locationtech.jts.geom.Point, geometry: org.locationtech.jts.geom.Geometry) -> org.locationtech.jts.geom.Geometry: ...
    def getJavaStaticMethod(self) -> str: ...

class ST_ClosestPoint(org.h2gis.api.DeterministicScalarFunction):
    def __init__(self): ...
    @staticmethod
    def closestPoint(geometry: org.locationtech.jts.geom.Geometry, geometry2: org.locationtech.jts.geom.Geometry) -> org.locationtech.jts.geom.Point: ...
    def getJavaStaticMethod(self) -> str: ...

class ST_FurthestCoordinate(org.h2gis.api.DeterministicScalarFunction):
    def __init__(self): ...
    @staticmethod
    def getFurthestCoordinate(point: org.locationtech.jts.geom.Point, geometry: org.locationtech.jts.geom.Geometry) -> org.locationtech.jts.geom.Geometry: ...
    def getJavaStaticMethod(self) -> str: ...

class ST_LocateAlong(org.h2gis.api.DeterministicScalarFunction):
    def __init__(self): ...
    def getJavaStaticMethod(self) -> str: ...
    @staticmethod
    def locateAlong(geometry: org.locationtech.jts.geom.Geometry, double: float, double2: float) -> org.locationtech.jts.geom.MultiPoint: ...

class ST_LongestLine(org.h2gis.api.DeterministicScalarFunction):
    def __init__(self): ...
    def getJavaStaticMethod(self) -> str: ...
    @staticmethod
    def longestLine(geometry: org.locationtech.jts.geom.Geometry, geometry2: org.locationtech.jts.geom.Geometry) -> org.locationtech.jts.geom.Geometry: ...

class ST_MaxDistance(org.h2gis.api.DeterministicScalarFunction):
    def __init__(self): ...
    def getJavaStaticMethod(self) -> str: ...
    @staticmethod
    def maxDistance(geometry: org.locationtech.jts.geom.Geometry, geometry2: org.locationtech.jts.geom.Geometry) -> float: ...

class ST_ProjectPoint(org.h2gis.api.DeterministicScalarFunction):
    def __init__(self): ...
    def getJavaStaticMethod(self) -> str: ...
    @staticmethod
    def projectPoint(geometry: org.locationtech.jts.geom.Geometry, geometry2: org.locationtech.jts.geom.Geometry) -> org.locationtech.jts.geom.Point: ...

class ST_ShortestLine(org.h2gis.api.DeterministicScalarFunction):
    def __init__(self): ...
    def getJavaStaticMethod(self) -> str: ...
    @staticmethod
    def shortestLine(geometry: org.locationtech.jts.geom.Geometry, geometry2: org.locationtech.jts.geom.Geometry) -> org.locationtech.jts.geom.LineString: ...


class __module_protocol__(Protocol):
    # A module protocol which reflects the result of ``jp.JPackage("org.h2gis.functions.spatial.distance")``.

    MaxDistanceOp: typing.Type[MaxDistanceOp]
    ST_ClosestCoordinate: typing.Type[ST_ClosestCoordinate]
    ST_ClosestPoint: typing.Type[ST_ClosestPoint]
    ST_FurthestCoordinate: typing.Type[ST_FurthestCoordinate]
    ST_LocateAlong: typing.Type[ST_LocateAlong]
    ST_LongestLine: typing.Type[ST_LongestLine]
    ST_MaxDistance: typing.Type[ST_MaxDistance]
    ST_ProjectPoint: typing.Type[ST_ProjectPoint]
    ST_ShortestLine: typing.Type[ST_ShortestLine]

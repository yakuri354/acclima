
import sys
if sys.version_info >= (3, 8):
    from typing import Protocol
else:
    from typing_extensions import Protocol

import java.sql
import java.util
import jpype
import org
import org.h2.api
import org.h2.tools
import org.h2.value
import org.h2gis.api
import org.locationtech.jts.geom
import typing



class ST_3DArea(org.h2gis.api.DeterministicScalarFunction):
    def __init__(self): ...
    def getJavaStaticMethod(self) -> str: ...
    @staticmethod
    def st3darea(geometry: org.locationtech.jts.geom.Geometry) -> float: ...

class ST_3DLength(org.h2gis.api.DeterministicScalarFunction):
    def __init__(self): ...
    def getJavaStaticMethod(self) -> str: ...
    @typing.overload
    @staticmethod
    def length3D(coordinateSequence: org.locationtech.jts.geom.CoordinateSequence) -> float: ...
    @typing.overload
    @staticmethod
    def length3D(geometry: org.locationtech.jts.geom.Geometry) -> float: ...
    @typing.overload
    @staticmethod
    def length3D(lineString: org.locationtech.jts.geom.LineString) -> float: ...
    @typing.overload
    @staticmethod
    def length3D(polygon: org.locationtech.jts.geom.Polygon) -> float: ...
    @staticmethod
    def stLength3D(geometry: org.locationtech.jts.geom.Geometry) -> float: ...

class ST_3DPerimeter(org.h2gis.api.DeterministicScalarFunction):
    def __init__(self): ...
    def getJavaStaticMethod(self) -> str: ...
    @staticmethod
    def st3Dperimeter(geometry: org.locationtech.jts.geom.Geometry) -> float: ...

class ST_Area(org.h2gis.api.DeterministicScalarFunction):
    def __init__(self): ...
    @staticmethod
    def getArea(geometry: org.locationtech.jts.geom.Geometry) -> float: ...
    def getJavaStaticMethod(self) -> str: ...

class ST_Boundary(org.h2gis.api.DeterministicScalarFunction):
    def __init__(self): ...
    @typing.overload
    @staticmethod
    def getBoundary(geometry: org.locationtech.jts.geom.Geometry) -> org.locationtech.jts.geom.Geometry: ...
    @typing.overload
    @staticmethod
    def getBoundary(geometry: org.locationtech.jts.geom.Geometry, int: int) -> org.locationtech.jts.geom.Geometry: ...
    def getJavaStaticMethod(self) -> str: ...

class ST_Centroid(org.h2gis.api.DeterministicScalarFunction):
    def __init__(self): ...
    @staticmethod
    def getCentroid(geometry: org.locationtech.jts.geom.Geometry) -> org.locationtech.jts.geom.Geometry: ...
    def getJavaStaticMethod(self) -> str: ...

class ST_CompactnessRatio(org.h2gis.api.DeterministicScalarFunction):
    def __init__(self): ...
    @staticmethod
    def computeCompacity(geometry: org.locationtech.jts.geom.Geometry) -> float: ...
    def getJavaStaticMethod(self) -> str: ...

class ST_CoordDim(org.h2gis.api.DeterministicScalarFunction):
    def __init__(self): ...
    @staticmethod
    def getCoordinateDimension(geometry: org.locationtech.jts.geom.Geometry) -> int: ...
    def getJavaStaticMethod(self) -> str: ...

class ST_Dimension(org.h2gis.api.DeterministicScalarFunction):
    def __init__(self): ...
    @staticmethod
    def getDimension(geometry: org.locationtech.jts.geom.Geometry) -> int: ...
    def getJavaStaticMethod(self) -> str: ...

class ST_Distance(org.h2gis.api.DeterministicScalarFunction):
    def __init__(self): ...
    @staticmethod
    def distance(geometry: org.locationtech.jts.geom.Geometry, geometry2: org.locationtech.jts.geom.Geometry) -> float: ...
    def getJavaStaticMethod(self) -> str: ...

class ST_DistanceSphere(org.h2gis.api.DeterministicScalarFunction):
    def __init__(self): ...
    @staticmethod
    def distanceSphere(connection: java.sql.Connection, geometry: org.locationtech.jts.geom.Geometry, geometry2: org.locationtech.jts.geom.Geometry) -> float: ...
    def getJavaStaticMethod(self) -> str: ...

class ST_EndPoint(org.h2gis.api.DeterministicScalarFunction):
    def __init__(self): ...
    @staticmethod
    def getEndPoint(geometry: org.locationtech.jts.geom.Geometry) -> org.locationtech.jts.geom.Geometry: ...
    def getJavaStaticMethod(self) -> str: ...

class ST_Envelope(org.h2gis.api.DeterministicScalarFunction):
    def __init__(self): ...
    @typing.overload
    @staticmethod
    def getEnvelope(geometry: org.locationtech.jts.geom.Geometry) -> org.locationtech.jts.geom.Geometry: ...
    @typing.overload
    @staticmethod
    def getEnvelope(geometry: org.locationtech.jts.geom.Geometry, int: int) -> org.locationtech.jts.geom.Geometry: ...
    def getJavaStaticMethod(self) -> str: ...

class ST_EstimatedExtent(org.h2gis.api.AbstractFunction, org.h2gis.api.ScalarFunction):
    def __init__(self): ...
    @typing.overload
    @staticmethod
    def computeEstimatedExtent(connection: java.sql.Connection, string: str) -> org.locationtech.jts.geom.Geometry: ...
    @typing.overload
    @staticmethod
    def computeEstimatedExtent(connection: java.sql.Connection, string: str, string2: str) -> org.locationtech.jts.geom.Geometry: ...
    def getJavaStaticMethod(self) -> str: ...

class ST_Extent(org.h2gis.api.AbstractFunction, org.h2.api.Aggregate):
    def __init__(self): ...
    def add(self, object: typing.Any) -> None: ...
    def getInternalType(self, intArray: typing.Union[typing.List[int], jpype.JArray]) -> int: ...
    def getResult(self) -> org.locationtech.jts.geom.Geometry: ...
    def init(self, connection: java.sql.Connection) -> None: ...

class ST_ExteriorRing(org.h2gis.api.DeterministicScalarFunction):
    def __init__(self): ...
    @staticmethod
    def getExteriorRing(geometry: org.locationtech.jts.geom.Geometry) -> org.locationtech.jts.geom.Geometry: ...
    def getJavaStaticMethod(self) -> str: ...

class ST_GeometryN(org.h2gis.api.DeterministicScalarFunction):
    def __init__(self): ...
    @staticmethod
    def getGeometryN(geometry: org.locationtech.jts.geom.Geometry, integer: int) -> org.locationtech.jts.geom.Geometry: ...
    def getJavaStaticMethod(self) -> str: ...

class ST_GeometryType(org.h2gis.api.DeterministicScalarFunction):
    def __init__(self): ...
    @staticmethod
    def getGeometryType(geometry: org.locationtech.jts.geom.Geometry) -> str: ...
    def getJavaStaticMethod(self) -> str: ...

class ST_GeometryTypeCode(org.h2gis.api.DeterministicScalarFunction):
    def __init__(self): ...
    def getJavaStaticMethod(self) -> str: ...
    @staticmethod
    def getTypeCode(geometry: org.locationtech.jts.geom.Geometry) -> int: ...

class ST_InteriorRingN(org.h2gis.api.DeterministicScalarFunction):
    def __init__(self): ...
    @staticmethod
    def getInteriorRing(geometry: org.locationtech.jts.geom.Geometry, integer: int) -> org.locationtech.jts.geom.LineString: ...
    def getJavaStaticMethod(self) -> str: ...

class ST_Is3D(org.h2gis.api.DeterministicScalarFunction):
    def __init__(self): ...
    def getJavaStaticMethod(self) -> str: ...
    @staticmethod
    def is3D(geometry: org.locationtech.jts.geom.Geometry) -> int: ...

class ST_IsClosed(org.h2gis.api.DeterministicScalarFunction):
    def __init__(self): ...
    def getJavaStaticMethod(self) -> str: ...
    @staticmethod
    def isClosed(geometry: org.locationtech.jts.geom.Geometry) -> bool: ...

class ST_IsEmpty(org.h2gis.api.DeterministicScalarFunction):
    def __init__(self): ...
    def getJavaStaticMethod(self) -> str: ...
    @staticmethod
    def isEmpty(geometry: org.locationtech.jts.geom.Geometry) -> bool: ...

class ST_IsRectangle(org.h2gis.api.DeterministicScalarFunction):
    def __init__(self): ...
    def getJavaStaticMethod(self) -> str: ...
    @staticmethod
    def isRectangle(geometry: org.locationtech.jts.geom.Geometry) -> bool: ...

class ST_IsRing(org.h2gis.api.DeterministicScalarFunction):
    def __init__(self): ...
    def getJavaStaticMethod(self) -> str: ...
    @staticmethod
    def isRing(geometry: org.locationtech.jts.geom.Geometry) -> bool: ...

class ST_IsSimple(org.h2gis.api.DeterministicScalarFunction):
    def __init__(self): ...
    def getJavaStaticMethod(self) -> str: ...
    @staticmethod
    def isSimple(geometry: org.locationtech.jts.geom.Geometry) -> bool: ...

class ST_IsValid(org.h2gis.api.DeterministicScalarFunction):
    def __init__(self): ...
    def getJavaStaticMethod(self) -> str: ...
    @staticmethod
    def isValid(geometry: org.locationtech.jts.geom.Geometry) -> bool: ...

class ST_IsValidDetail(org.h2gis.api.DeterministicScalarFunction):
    def __init__(self): ...
    def getJavaStaticMethod(self) -> str: ...
    @typing.overload
    @staticmethod
    def isValidDetail(geometry: org.locationtech.jts.geom.Geometry) -> typing.MutableSequence[str]: ...
    @typing.overload
    @staticmethod
    def isValidDetail(geometry: org.locationtech.jts.geom.Geometry, int: int) -> typing.MutableSequence[str]: ...

class ST_IsValidReason(org.h2gis.api.DeterministicScalarFunction):
    def __init__(self): ...
    def getJavaStaticMethod(self) -> str: ...
    @typing.overload
    @staticmethod
    def isValidReason(geometry: org.locationtech.jts.geom.Geometry) -> str: ...
    @typing.overload
    @staticmethod
    def isValidReason(geometry: org.locationtech.jts.geom.Geometry, int: int) -> str: ...

class ST_Length(org.h2gis.api.DeterministicScalarFunction):
    def __init__(self): ...
    def getJavaStaticMethod(self) -> str: ...
    @staticmethod
    def getLength(geometry: org.locationtech.jts.geom.Geometry) -> float: ...

class ST_MemSize(org.h2gis.api.DeterministicScalarFunction):
    def __init__(self): ...
    def getJavaStaticMethod(self) -> str: ...
    @staticmethod
    def memsize(value: org.h2.value.Value) -> int: ...

class ST_MinimumDiameter(org.h2gis.api.DeterministicScalarFunction):
    def __init__(self): ...
    def getJavaStaticMethod(self) -> str: ...
    @staticmethod
    def minimumDiameter(geometry: org.locationtech.jts.geom.Geometry) -> org.locationtech.jts.geom.LineString: ...

class ST_NPoints(org.h2gis.api.DeterministicScalarFunction):
    def __init__(self): ...
    def getJavaStaticMethod(self) -> str: ...
    @staticmethod
    def getNPoints(geometry: org.locationtech.jts.geom.Geometry) -> int: ...

class ST_NumGeometries(org.h2gis.api.DeterministicScalarFunction):
    def __init__(self): ...
    def getJavaStaticMethod(self) -> str: ...
    @staticmethod
    def getNumGeometries(geometry: org.locationtech.jts.geom.Geometry) -> int: ...

class ST_NumInteriorRings(org.h2gis.api.DeterministicScalarFunction):
    def __init__(self): ...
    @staticmethod
    def getHoles(geometry: org.locationtech.jts.geom.Geometry) -> int: ...
    def getJavaStaticMethod(self) -> str: ...

class ST_NumPoints(org.h2gis.api.DeterministicScalarFunction):
    def __init__(self): ...
    def getJavaStaticMethod(self) -> str: ...
    @staticmethod
    def getNumPoints(geometry: org.locationtech.jts.geom.Geometry) -> int: ...

class ST_Perimeter(org.h2gis.api.DeterministicScalarFunction):
    def __init__(self): ...
    def getJavaStaticMethod(self) -> str: ...
    @staticmethod
    def perimeter(geometry: org.locationtech.jts.geom.Geometry) -> float: ...

class ST_PointN(org.h2gis.api.DeterministicScalarFunction):
    def __init__(self): ...
    def getJavaStaticMethod(self) -> str: ...
    @staticmethod
    def getPointN(geometry: org.locationtech.jts.geom.Geometry, int: int) -> org.locationtech.jts.geom.Geometry: ...

class ST_PointOnSurface(org.h2gis.api.DeterministicScalarFunction):
    def __init__(self): ...
    @staticmethod
    def getInteriorPoint(geometry: org.locationtech.jts.geom.Geometry) -> org.locationtech.jts.geom.Geometry: ...
    def getJavaStaticMethod(self) -> str: ...

class ST_SRID(org.h2gis.api.DeterministicScalarFunction):
    def __init__(self): ...
    def getJavaStaticMethod(self) -> str: ...
    @staticmethod
    def getSRID(geometry: org.locationtech.jts.geom.Geometry) -> int: ...

class ST_StartPoint(org.h2gis.api.DeterministicScalarFunction):
    def __init__(self): ...
    def getJavaStaticMethod(self) -> str: ...
    @staticmethod
    def getStartPoint(geometry: org.locationtech.jts.geom.Geometry) -> org.locationtech.jts.geom.Geometry: ...

class ST_X(org.h2gis.api.DeterministicScalarFunction):
    def __init__(self): ...
    def getJavaStaticMethod(self) -> str: ...
    @staticmethod
    def getX(geometry: org.locationtech.jts.geom.Geometry) -> float: ...

class ST_XMax(org.h2gis.api.DeterministicScalarFunction):
    def __init__(self): ...
    def getJavaStaticMethod(self) -> str: ...
    @staticmethod
    def getMaxX(geometry: org.locationtech.jts.geom.Geometry) -> float: ...

class ST_XMin(org.h2gis.api.DeterministicScalarFunction):
    def __init__(self): ...
    def getJavaStaticMethod(self) -> str: ...
    @staticmethod
    def getMinX(geometry: org.locationtech.jts.geom.Geometry) -> float: ...

class ST_Y(org.h2gis.api.DeterministicScalarFunction):
    def __init__(self): ...
    def getJavaStaticMethod(self) -> str: ...
    @staticmethod
    def getY(geometry: org.locationtech.jts.geom.Geometry) -> float: ...

class ST_YMax(org.h2gis.api.DeterministicScalarFunction):
    def __init__(self): ...
    def getJavaStaticMethod(self) -> str: ...
    @staticmethod
    def getMaxY(geometry: org.locationtech.jts.geom.Geometry) -> float: ...

class ST_YMin(org.h2gis.api.DeterministicScalarFunction):
    def __init__(self): ...
    def getJavaStaticMethod(self) -> str: ...
    @staticmethod
    def getMinY(geometry: org.locationtech.jts.geom.Geometry) -> float: ...

class ST_Z(org.h2gis.api.DeterministicScalarFunction):
    def __init__(self): ...
    def getJavaStaticMethod(self) -> str: ...
    @staticmethod
    def getZ(geometry: org.locationtech.jts.geom.Geometry) -> float: ...

class ST_ZMax(org.h2gis.api.DeterministicScalarFunction):
    def __init__(self): ...
    def getJavaStaticMethod(self) -> str: ...
    @staticmethod
    def getMaxZ(geometry: org.locationtech.jts.geom.Geometry) -> float: ...

class ST_ZMin(org.h2gis.api.DeterministicScalarFunction):
    def __init__(self): ...
    def getJavaStaticMethod(self) -> str: ...
    @staticmethod
    def getMinZ(geometry: org.locationtech.jts.geom.Geometry) -> float: ...

class ST_M(ST_Z):
    def __init__(self): ...

class ST_NumInteriorRing(ST_NumInteriorRings):
    def __init__(self): ...

class ST_Explode(org.h2gis.api.AbstractFunction, org.h2gis.api.ScalarFunction):
    EXPLODE_FIELD: typing.ClassVar[str] = ...
    def __init__(self): ...
    @typing.overload
    @staticmethod
    def explode(connection: java.sql.Connection, string: str) -> java.sql.ResultSet: ...
    @typing.overload
    @staticmethod
    def explode(connection: java.sql.Connection, string: str, string2: str) -> java.sql.ResultSet: ...
    def getJavaStaticMethod(self) -> str: ...
    class ExplodeResultSet(org.h2.tools.SimpleRowSource):
        firstRow: bool = ...
        tableQuery: java.sql.ResultSet = ...
        tableName: str = ...
        spatialFieldName: str = ...
        spatialFieldIndex: int = ...
        columnCount: int = ...
        sourceRowGeometries: java.util.Queue = ...
        explodeId: int = ...
        connection: java.sql.Connection = ...
        def __init__(self, connection: java.sql.Connection, string: str, string2: str): ...
        def close(self) -> None: ...
        def getResultSet(self) -> java.sql.ResultSet: ...
        def readRow(self) -> typing.MutableSequence[typing.Any]: ...
        def reset(self) -> None: ...
    class ExplodeResultSetQuery(org.h2gis.functions.spatial.properties.ST_Explode.ExplodeResultSet):
        def __init__(self, connection: java.sql.Connection, string: str, string2: str): ...
        def getResultSet(self) -> java.sql.ResultSet: ...
        def reset(self) -> None: ...


class __module_protocol__(Protocol):
    # A module protocol which reflects the result of ``jp.JPackage("org.h2gis.functions.spatial.properties")``.

    ST_3DArea: typing.Type[ST_3DArea]
    ST_3DLength: typing.Type[ST_3DLength]
    ST_3DPerimeter: typing.Type[ST_3DPerimeter]
    ST_Area: typing.Type[ST_Area]
    ST_Boundary: typing.Type[ST_Boundary]
    ST_Centroid: typing.Type[ST_Centroid]
    ST_CompactnessRatio: typing.Type[ST_CompactnessRatio]
    ST_CoordDim: typing.Type[ST_CoordDim]
    ST_Dimension: typing.Type[ST_Dimension]
    ST_Distance: typing.Type[ST_Distance]
    ST_DistanceSphere: typing.Type[ST_DistanceSphere]
    ST_EndPoint: typing.Type[ST_EndPoint]
    ST_Envelope: typing.Type[ST_Envelope]
    ST_EstimatedExtent: typing.Type[ST_EstimatedExtent]
    ST_Explode: typing.Type[ST_Explode]
    ST_Extent: typing.Type[ST_Extent]
    ST_ExteriorRing: typing.Type[ST_ExteriorRing]
    ST_GeometryN: typing.Type[ST_GeometryN]
    ST_GeometryType: typing.Type[ST_GeometryType]
    ST_GeometryTypeCode: typing.Type[ST_GeometryTypeCode]
    ST_InteriorRingN: typing.Type[ST_InteriorRingN]
    ST_Is3D: typing.Type[ST_Is3D]
    ST_IsClosed: typing.Type[ST_IsClosed]
    ST_IsEmpty: typing.Type[ST_IsEmpty]
    ST_IsRectangle: typing.Type[ST_IsRectangle]
    ST_IsRing: typing.Type[ST_IsRing]
    ST_IsSimple: typing.Type[ST_IsSimple]
    ST_IsValid: typing.Type[ST_IsValid]
    ST_IsValidDetail: typing.Type[ST_IsValidDetail]
    ST_IsValidReason: typing.Type[ST_IsValidReason]
    ST_Length: typing.Type[ST_Length]
    ST_M: typing.Type[ST_M]
    ST_MemSize: typing.Type[ST_MemSize]
    ST_MinimumDiameter: typing.Type[ST_MinimumDiameter]
    ST_NPoints: typing.Type[ST_NPoints]
    ST_NumGeometries: typing.Type[ST_NumGeometries]
    ST_NumInteriorRing: typing.Type[ST_NumInteriorRing]
    ST_NumInteriorRings: typing.Type[ST_NumInteriorRings]
    ST_NumPoints: typing.Type[ST_NumPoints]
    ST_Perimeter: typing.Type[ST_Perimeter]
    ST_PointN: typing.Type[ST_PointN]
    ST_PointOnSurface: typing.Type[ST_PointOnSurface]
    ST_SRID: typing.Type[ST_SRID]
    ST_StartPoint: typing.Type[ST_StartPoint]
    ST_X: typing.Type[ST_X]
    ST_XMax: typing.Type[ST_XMax]
    ST_XMin: typing.Type[ST_XMin]
    ST_Y: typing.Type[ST_Y]
    ST_YMax: typing.Type[ST_YMax]
    ST_YMin: typing.Type[ST_YMin]
    ST_Z: typing.Type[ST_Z]
    ST_ZMax: typing.Type[ST_ZMax]
    ST_ZMin: typing.Type[ST_ZMin]
